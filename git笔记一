1.为什么使用代码托管工具
关键词：团队协作  减少失误  提高效率
拓展（代码分发策略）https://www.cnblogs.com/freddyzhang/p/7117920.html
2.代码托管工具有哪些
主流：SVN、Git 
SVN：
集中式版本控制系统,如CVS,Subversion和Perforce的,有一个包含所有版本文件的单个服务器和一个数字(版本号),
众多客户端从这个server上去检出文件(只是文件,本地没有仓库的概念)。但是集中式的版本控制，有个严重的缺陷。
就是中央服务器的单点故障。如果服务宕机一个小时，在这期间，没有任何人可以在正在工作的版本上很好的合作或者去保存某一个版本的改变。
另外如果中央数据库的磁盘坏了，并且可能没有保存备份，那么将丢失所有的东西。
你失去了绝对一切 - 除了单一的任何人的快照恰好有在本地计算机上项目的整个历史。
当然本地的版本控制系统也有相同的问题。虽然，你能够把每个人的本地代码，进行合并得到一个相对完整的版本，
但是当你把这个相对完整的版本重新部署到服务器的新仓库时，将会丢失所有的历史版本包括日志。

Git：
这是在分布式版本控制系统（DVCSs）步在DVCS（如GIT中），
客户端不只是检查出文件的最新快照：他们完全镜像的存储库（本地有仓库，这就是分布式的意义）。
因此，如果出现上述问题，任何客户机库的可复制备份到服务器，以恢复它。
对比结果:
git是分布式的scm,svn是集中式的。(最核心)
git是每个历史版本都存储完整的文件,便于恢复,svn是存储差异文件,历史版本不可恢复。(核心)
git可离线完成大部分操作,svn则不能。
git有着更优雅的分支和合并实现。
git有着更强的撤销修改和修改历史版本的能力
git速度更快,效率更高。

3.如何使用Git

git 命令
git config --global user.name “ming”
git config --global user.email “1181509724@qq.com” 
知识点：SSH（Secure Shell）是一种非对称加密与对称加密算法相结合的安全网络协议，用于计算机通信加密。公钥就是那个用来加密的数字，这也就是为什么在本机生成了公钥之后，要上传到远程服务器的原因。从服务器发回来的，是用公钥加密过的数据，可以用你本地的私钥来还原。
1.检查是否存在SSH
cd ~/.ssh
没有反应说明不存在，需要创建SSH密钥：
ssh-keygen -t rsa -C “1181509724@qq.com”  
输入文件名，或者直接回车，则会默认保存在id_rsa.pub


2.将密钥内容拷贝到创建好的远程仓库中


注意：将密钥粘贴好之后，可以自动生成标题，不需要手动修改。
4.使用以下命令关联远程仓库
方法一：
克隆远程仓库到本地：
Git clone git@codehub.devcloud.huaweicloud.com:cfb50980a62f4d1c8f3ee009a73700e4/test1.git这里会在本地创建出和远程仓库同名的文件，将需要提交的项目文件复制到文件夹后，使用Git push提交即可
方法二：
关联本地仓库到远程：
git remote add git@codehub.devcloud.huaweicloud.com:cfb50980a62f4d1c8f3ee009a73700e4/test1.git
origin是仓库的名字
git push origin master 将代码提交到不同仓库中，可以指定分支，这里是master主分支
然后执行git pull origin master 先将远程仓库上的代码pull（拉）下来
然后在git push（推） origin master
补充知识点Git基础：http://www.bootcss.com/p/git-guide/


